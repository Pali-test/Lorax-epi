// Calculator class that provides basic arithmetic operations
class Calculator {
    // Method to add two numbers
    add(a, b) {
        return a + b;
    }

    // Method to subtract the second number from the first
    subtract(a, b) {
        return a - b;
    }

    // Method to multiply two numbers
    multiply(a, b) {
        return a * b;
    }

    // Method to divide the first number by the second
    // Throws an error if division by zero is attempted
    divide(a, b) {
        if (b === 0) {
            throw new Error("Cannot divide by zero");
        }
        return a / b;
    }
}

// Importing a testing framework (Jest is commonly used for JavaScript unit tests)
const { test, expect } = require('@jest/globals');

// Unit tests for the Calculator class

test('adds two numbers correctly', () => {
    const calc = new Calculator();
    expect(calc.add(1, 2)).toBe(3);
    expect(calc.add(-1, -1)).toBe(-2);
    expect(calc.add(-1, 1)).toBe(0);
    expect(calc.add(0, 0)).toBe(0);
});

test('subtracts two numbers correctly', () => {
    const calc = new Calculator();
    expect(calc.subtract(2, 1)).toBe(1);
    expect(calc.subtract(1, 2)).toBe(-1);
    expect(calc.subtract(-1, -1)).toBe(0);
    expect(calc.subtract(0, 5)).toBe(-5);
});

test('multiplies two numbers correctly', () => {
    const calc = new Calculator();
    expect(calc.multiply(2, 3)).toBe(6);
    expect(calc.multiply(-2, 3)).toBe(-6);
    expect(calc.multiply(0, 100)).toBe(0);
    expect(calc.multiply(-2, -3)).toBe(6);
});

test('divides two numbers correctly and handles division by zero', () => {
    const calc = new Calculator();
    expect(calc.divide(6, 3)).toBe(2);
    expect(calc.divide(-6, 3)).toBe(-2);
    expect(calc.divide(6, -3)).toBe(-2);
    expect(calc.divide(-6, -3)).toBe(2);
    expect(() => calc.divide(1, 0)).toThrow("Cannot divide by zero");
});
